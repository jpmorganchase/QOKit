[project]
name = "qokit"
description="Quantum Optimization Toolkit"
readme = "README.md"
authors = [ 
   {name = "JP Morgan Chase & Co"},
   {email = "OmniQ_Support@jpmchase.com"}
   ]
license = {file = "LICENSE"}
classifiers=[
    "Development Status :: 2 - Pre-Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
version = "0.1.4"
requires-python = ">=3.10.0"
dependencies = [
    'networkx==3.0.0',
    'importlib-resources>=5.2.2',
    'numpy==1.26.4',
    'numba>=0.56.4,<1',
    'pandas>=2.0.1',
    'pathos>=0.3.0',
    'pytest>=7.3.1',
    'pytket==1.37.0',
    'docplex==2.28.240',
    'yfinance==0.2.59',
    'pytket-qiskit==0.62',
    'pytket-quantinuum==0.42.0',
    'qiskit==1.3.1',
    'scipy>=1.10.1',
    'seaborn>=0.12.2',
    'sympy>=1.12',
    'tqdm>=4.65.0',
]

[project.optional-dependencies]
GPU-CUDA12 = [
    'cupy-cuda12x>=13.2.0'
]
solvers = [
  'docplex>=2.18.200',
  'gurobipy>=9.1.2'
]

[build-system]
requires = ["setuptools>=45",
"wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 160
target-version = ['py310', 'py311']
force-exclude = '''
(
  /(
    | .git       
    | .github       
    | jupyter
  )/
    | scripts/*.sh
    | scripts/*.md
    | ^.txt
    | ^.txt
    | ^.sh
    | ^.md
)
'''
[tool.setuptools]
py-modules = []

[tool.coverage.run]
omit = [
    "qokit/classical_methods/utils.py",
    "qokit/fur/nbcuda/fur.py",
    "qokit/fur/nbcuda/*",
    "qokit/fur/mpi_nbcuda/*",
    "qokit/fur/mpi_custatevec/*",
    "qokit/fur/diagonal_precomputation/gpu_numba.py",
    ]
[tool.setuptools.packages.find]
where = ["."]
exclude = ["tests*"]    


[tool.setuptools.package-data]
"*" = ["*.json", "*.npy"]


[tool.setuptools.dynamic]

[tool.pyright]
reportIncompatibleMethodOverride = true
reportPrivateUsage = true
